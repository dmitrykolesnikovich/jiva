subprojects {

    ext.common_library = {
        if (!useInternalsIos && project.artifactId == "featurea:ios") return // quickfix todo improve

        project.with {
            apply plugin: "org.jetbrains.kotlin.multiplatform"

            kotlin {
                sourceSets {
                    commonMain {
                        dependencies {
                            api "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
                            api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
                        }

                        // res
                        resources.srcDirs = ["res"]

                        // src
                        if (isCrossplatform()) {
                            kotlin.srcDirs = ["src"]
                        } else {
                            kotlin.srcDirs = ["src/common"]
                        }
                    }
                }
            }
        }
    }

    ext.android_library = {
        project.android_interop_library(true) // quickfix todo improve

        project.with {
            kotlin {
                targets {
                    fromPreset(presets.android, "android")
                }

                sourceSets {
                    androidMain {
                        dependencies {
                            api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinx_coroutines_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_coroutines_version"
                            api "com.android.support:multidex:1.0.3"
                        }

                        if (jvmExists()) {
                            dependsOn jvmMain
                        } else {
                            dependsOn commonMain
                        }
                    }
                }
            }
        }
    }

    ext.desktop_library = {
        project.with {
            kotlin {
                targets {
                    fromPreset(presets.jvm, "desktop")
                }

                sourceSets {
                    desktopMain {
                        dependencies {
                            api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinx_coroutines_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-javafx:$kotlinx_coroutines_version"
                        }
                        dependsOn commonMain

                        resources.srcDirs = ["res"]
                        kotlin.srcDirs = ["src/desktop"]
                    }
                }
            }
        }
    }

    ext.ios_library = {
        if (useInternalsIos) {
            project.with {
                kotlin {
                    targets {
                        fromPreset(presets.iosArm64, "ios")
                    }

                    sourceSets {
                        iosMain {
                            dependencies {
                                api("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version")
                                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-native:1.3.8"
                                api "org.jetbrains.kotlinx:atomicfu-native:$kotlin_atomicfu_version"
                            }
                            dependsOn commonMain

                            kotlin.srcDirs = ["src/ios"]
                        }
                    }
                }
            }
        }
    }

    ext.js_library = {
        if (!property("featurea.internals.js").toBoolean()) return

        project.with {
            kotlin {
                targets {
                    fromPreset(presets.js, "js")
                }

                js {
                    browser()
                }
                sourceSets {
                    jsMain {
                        dependencies {
                            api "org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version"
                            api "org.jetbrains.kotlinx:kotlinx-coroutines-core-js:$kotlinx_coroutines_version"

                            dependsOn commonMain
                        }

                        resources.srcDirs = ["res"]
                        kotlin.srcDirs = ["src/js", assembleSrcDir]
                    }
                }
            }
            generate { AssembleKtFile() }
        }
    }

    ext.jvm_library = {
        project.common_library()

        project.with {
            kotlin {
                targets {
                    fromPreset(presets.jvm, "jvm")
                }

                sourceSets.jvmMain {
                    dependencies {
                        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
                        api "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:$kotlinx_coroutines_version"
                    }

                    kotlin.srcDirs = ["src/jvm"]
                }
            }
        }

        project.android_library()
    }

}